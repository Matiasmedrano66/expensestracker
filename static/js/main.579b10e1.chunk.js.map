{"version":3,"sources":["Expenses/ExpenseDate.js","UI/Card.js","Expenses/ExpenseItem.js","Expenses/ExpensesList.js","Chart/ChartBar.js","Chart/Chart.js","Expenses/ExpensesChart.js","Expenses/ExpenseFilter.js","Expenses/Expenses.js","Expenses/ExpenseForm.js","Expenses/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","expenses","length","map","id","ChartBar","barFillHeight","maxValue","Math","round","value","style","height","label","Chart","dataPointValues","dataPoints","datapoint","totalMaximum","max","dataPoint","ExpensesChart","chartDataPoints","expense","getMonth","ExpensesFilter","selected","onChange","event","onSelectedYear","target","Expenses","useState","selectedYear","setSelectedYear","filteredExpenses","filter","console","log","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","onCancelOrSubmit","type","min","step","onClick","NewExpense","showForm","setShowForm","enteredExpenseData","random","toString","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.579b10e1.chunk.js","sourcesContent":["\r\nimport './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    \r\n    return(\r\n        <div className='expense-date'>\r\n            <div className='expense-date__year'>{year}</div>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__day'>{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import './Card.css';\r\n\r\nfunction Card(props){\r\n\r\n    const classes = 'card ' + props.className;\r\n    return(\r\n        <div className={classes}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport { getAllByPlaceholderText } from '@testing-library/react';\r\n\r\nfunction ExpenseItem(props){\r\n    return(\r\n      \r\n        <Card className='expense-item'>\r\n            <ExpenseDate date={props.date}/>\r\n            <div className='expense-item__description'>\r\n                <h2 className='expense-item'>{props.title}</h2>\r\n                <div className='expense-item__price'>{props.amount}</div>\r\n            </div>\r\n           \r\n        </Card>\r\n    )\r\n} \r\n\r\nexport default ExpenseItem;","import { render } from \"@testing-library/react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n\r\n    if (props.expenses.length === 0){\r\n        return (<h2 className='expenses-list__fallback'>Found no expenses</h2>)\r\n    }\r\n\r\n    return(\r\n        <ul className='.expenses-list'>\r\n               {props.expenses.map(({id, title, amount, date}) => (\r\n            <ExpenseItem \r\n                key={id}\r\n                title={title} \r\n                amount={amount} \r\n                date={date} \r\n            />))}\r\n        </ul>\r\n     \r\n    )\r\n\r\n\r\n};\r\n\r\nexport default ExpensesList;","import './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div  className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div className='chart-bar__fill' style={{height: barFillHeight}}></div>\r\n            </div>\r\n            <div className='chart-bar__label'>{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;\r\n\r\n","import ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n\r\n    const dataPointValues = props.dataPoints.map((datapoint) => datapoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className='chart'>\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar \r\n                    key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={totalMaximum}\r\n                    label={dataPoint.label}\r\n                />\r\n           \r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpensesChart;","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\n\r\n\r\nconst ExpensesFilter = (props) => {\r\n   \r\n\r\n    const selectedYearHandler = (event) => {\r\n        \r\n        props.onSelectedYear(event.target.value);\r\n    }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={selectedYearHandler} >\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport React, {useState} from \"react\";\r\nimport ExpensesChart from './ExpensesChart';\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseFilter from './ExpenseFilter.js';\r\nimport './Expenses.css';\r\n\r\nfunction Expenses(props){\r\n\r\n    const [selectedYear, setSelectedYear] = useState('2021');\r\n\r\n\r\n\r\n\r\n    const handleYearSelect = (year) => {\r\n        setSelectedYear(year);\r\n    console.log(selectedYear);\r\n    }\r\n\r\n    const filteredExpenses = props.expenses.filter((expenses)=> expenses.date.getFullYear() == selectedYear);    \r\n\r\n\r\n    return(\r\n        <Card className='expenses'>\r\n            <div>\r\n                <ExpenseFilter selected={selectedYear} onSelectedYear={handleYearSelect} />\r\n            </div>\r\n            <ExpensesChart expenses={filteredExpenses}/>\r\n            <ExpensesList expenses={filteredExpenses} />\r\n            \r\n        </Card>\r\n    )\r\n} \r\n\r\nexport default Expenses;","\r\nimport React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount]  = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n      \r\n    }\r\n\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    \r\n    } \r\n\r\n    const dateChangeHandler = event => {\r\n        setEnteredDate(event.target.value);\r\n   \r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n        props.onCancelOrSubmit();\r\n    };\r\n\r\n    return <form onSubmit={submitHandler}>\r\n        <div className='new-expense__controls'>\r\n            <div className='new-expense__control'>\r\n                <label>Title</label>\r\n                <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n            </div>\r\n            <div className='new-expense__control'>\r\n                <label>Amount</label>\r\n                <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={amountChangeHandler} /> \r\n            </div>\r\n            <div className='new-expense__control'>\r\n                <label>Date</label>\r\n                <input type='date' min='2019-01-01' max='2022-12-31' value={enteredDate} onChange={dateChangeHandler} />\r\n            </div>    \r\n            <div className='new-expense__actions'>\r\n            <button onClick={props.onCancelOrSubmit} type='button'>Cancel</button>\r\n            <button type='submit'>Add Expense</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default ExpenseForm;","import './NewExpense.css';\r\nimport {useState} from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport React from 'react';\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [showForm, setShowForm] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n    }\r\n\r\n    const handelNewExpense = () => { setShowForm(true)};\r\n    const hideForm = () => { setShowForm(false)};\r\n\r\n\r\n    return <div className='new-expense'>\r\n        {!showForm && <button onClick={handelNewExpense}>New Expense</button>}\r\n        {showForm && <ExpenseForm onCancelOrSubmit={hideForm} onSaveExpenseData={saveExpenseDataHandler} />}\r\n    </div>\r\n}\r\n\r\nexport default NewExpense;","import React , {useState} from 'react';\nimport Expenses from \"./Expenses/Expenses\";\nimport NewExpense from './Expenses/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n\nfunction App() {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  }\n\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}